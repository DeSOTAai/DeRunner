## DeSOTA Services Params
services_params: {
    # DeSOTA Required Tools
    desotaai/derunner: {
        win: {
            version: 0.1.1,
            commit: 860d8357867d4ea648c3c62595b269ec6e37f611,
            project_dir: Desota\DeRunner,
            execs_path: executables\Windows,
            setup: derunner.setup.bat,
            setup_args: [/manualstart],
            uninstaller: derunner.uninstall.bat,
            uninstaller_args: [/Q],
            starter: derunner.start.bat,
            stoper: derunner.stop.bat,
            status: derunner.status.bat
        },
        lin: {
            version: 0.1.1,
            commit: 860d8357867d4ea648c3c62595b269ec6e37f611,
            project_dir: Desota/DeRunner,
            execs_path: executables/Linux,
            setup: derunner.setup.bash,
            setup_args: [-m],
            uninstaller: derunner.uninstall.bash,
            uninstaller_args: [-q],
            starter: derunner.start.bash,
            stoper: derunner.stop.bash,
            status: derunner.status.bash,
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/DeRunner,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status:
        },
        service_type: asset,
        required: true,
        source_code: https://github.com/desotaai/derunner,
        report_issue: https://github.com/desotaai/derunner/issues,
        description: https://github.com/desotaai/derunner/tree/main#readme,
        short_description: Desota Client for API Requests,
        run_constantly: true,
        submodel: false
    },
    desotaai/tinypython: {
        win: {
            version: 0.0.0,
            commit: 53fab0787dba6c329c2e57996cb8755992146fa6,
            project_dir: Desota\Portables\TinyPython,
            execs_path: executables\Windows,
            setup: tinypython.setup.bat,
            setup_args: null,
            uninstaller: tinypython.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,
            python_path: Desota\Portables\TinyPython\env\python.exe,
            pyrequirements: Desota\Portables\TinyPython\requirements.txt
        },
        lin: {
            version: 0.0.0,
            commit: 53fab0787dba6c329c2e57996cb8755992146fa6,
            project_dir: Desota/Portables/TinyPython,
            execs_path: executables/Linux,
            setup: tinypython.setup.bash,
            setup_args: null,
            uninstaller: tinypython.uninstall.bash,
            uninstaller_args: [-q],
            starter: ,
            stoper: ,
            status: ,
            python_path: Desota/Portables/TinyPython/env/bin/python3,
            pyrequirements: Desota/Portables/TinyPython/requirements.txt
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Portables/TinyPython,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,
            python_path:
        },
        service_type: asset,
        required: false,
        source_code: https://github.com/DeSOTAai/TinyPython,
        report_issue: https://github.com/DeSOTAai/TinyPython/issues,
        description: https://github.com/DeSOTAai/TinyPython/tree/main#readme,
        short_description: Portable Python as tool for Dedicated Model Runners,
        run_constantly: false,
        submodel: false,
        child_models: 
    },
    #NOT REQUIRED ASSETS
    spacewalkingninja/transformers: {
            win: {
                version: 0.0.0,
                commit: 70c372ef65ef9a703ca07fa05a0d3815f8af0834,
                project_dir: Desota\Portables\Transformers,
                execs_path: executables\Windows,
                setup: transformers.setup.bat,
                setup_args: null,
                uninstaller: transformers.uninstall.bat,
                uninstaller_args: [/Q],
                starter: ,
                stoper: ,
                status: ,
                python_path: Desota\Portables\Transformers\env\python.exe,
                pyrequirements: Desota\Portables\Transformers\requirements.txt
            },
            lin: {
                version: ,
                commit: ,
                project_dir: ,
                execs_path: ,
                setup: ,
                setup_args: null,
                uninstaller: ,
                uninstaller_args: ,
                starter: ,
                stoper: ,
                status: ,
                python_path: ,
                pyrequirements: 
            },
            mac: {
                version: ,
                commit: ,
                project_dir: ,
                execs_path: ,
                setup: ,
                setup_args: ,
                uninstaller: ,
                uninstaller_args: ,
                starter: ,
                stoper: ,
                status: ,
                python_path:
            },
            service_type: asset,
            required: false,
            source_code: https://github.com/spacewalkingninja/Transformers,
            report_issue: https://github.com/spacewalkingninja/Transformers/issues,
            description: https://github.com/spacewalkingninja/Transformers/tree/main#readme,
            short_description: Env for NVidia PyTorch Transformers models on DeSOTA ,
            run_constantly: false,
            submodel: false,
            child_models: 
        },
    # Models
    franciscomvargas/neuralqa/qa: {
        win: {
            version: 0.0.0,
            commit: a40bfe1e4a4b4c834bae9c9663a89659b80316a8,
            install_dir: Desota\Desota_Models\NeuralQA, # OPTIONAL - `project_dir`as default 
            project_dir: Desota\Desota_Models\NeuralQA\neuralqa,
            execs_path: executables\Windows,
            setup: neuralqa.setup.bat,
            setup_args: [/manualstart],
            uninstaller: neuralqa.uninstall.bat,
            uninstaller_args: [/Q],
            starter: neuralqa.start.bat,
            stoper: neuralqa.stop.bat,
            status: neuralqa.status.bat,
            test_args: {
                query: Question - Answer,
                type: null,
                file: null,
                raw_dict: {
                    context: "The main characters of The Simpsons are: Homer, Marge, Bart, Lisa, Maggie and Santas Little Helper",
                    question: "What characters are in The Simpsons?"
                }
                # test_timout = OPTIONAL (default = timeout)
            },

            desota_runner: qa_runner.py,
            python_path: Desota\Desota_Models\NeuralQA\neuralqa\env\python.exe,
            pyrequirements: Desota\Desota_Models\NeuralQA\neuralqa\requirements.txt
        },
        lin: {
            version: 0.0.0,
            commit: a40bfe1e4a4b4c834bae9c9663a89659b80316a8,
            project_dir: Desota/Desota_Models/NeuraQA/neuralqa,
            execs_path: executables/Linux,
            setup: neuralqa.setup.bash,
            setup_args: [-m],
            uninstaller: neuralqa.uninstall.bash,
            uninstaller_args: [-q],
            starter: neuralqa.start.bash,
            stoper: neuralqa.stop.bash,
            status: neuralqa.status.bash,
            test_args: {
                query: Question - Answer,
                type: null,
                file: null,
                raw_dict: {
                    context: "The main characters of The Simpsons are: Homer, Marge, Bart, Lisa, Maggie and Santas Little Helper",
                    question: "What characters are in The Simpsons?"
                }
                # test_timout = OPTIONAL (default = timeout)
            },

            desota_runner: qa_runner.py,
            python_path: Desota/Desota_Models/NeuraQA/neuralqa/env/bin/python3,
            pyrequirements: Desota/Desota_Models/NeuraQA/neuralqa/requirements.txt
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/NeuraQA/neuralqa,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path:
        },
        service_type: model,
        timeout: 600,
        required: false,
        source_code: https://github.com/franciscomvargas/neuralqa,
        report_issue: https://github.com/franciscomvargas/neuralqa/issues,
        description: https://github.com/franciscomvargas/neuralqa/tree/master#readme,
        short_description: Library for Question Answering on Large Datasets with BERT,
        model_ui: http://127.0.0.1:8888/,
        handshake_req: http://127.0.0.1:8888/api/handshake/,
        handshake_res: {
            status: ready
        },
        run_constantly: false,
        submodel: false,
        child_models: [
            franciscomvargas/neuralqa/expansion
        ]
    },
    # franciscomvargas/neuralqa/expansion: { # TODO
    #     win: {
    #         project_dir: Desota\Desota_Models\NeuralQA\neuralqa,
    #         test_args: {
    #             query: Expand,
    #             type: text,
    #             file: Make a creative image about shrek,
    #             # test_timout = OPTIONAL (default = timeout)
    #         },
    #         desota_runner: expansion_runner.py,
    #         python_path: Desota\Desota_Models\NeuralQA\neuralqa\env\python.exe,
    #         pyrequirements: Desota\Desota_Models\DeScraper\requirements.txt
    #     },
    #     lin: {
    #         project_dir: Desota/Desota_Models/NeuraQA/neuralqa,
    #         desota_runner: expansion_runner.py,
    #         python_path: Desota/Desota_Models/NeuraQA/neuralqa/env/bin/python3
    #     },
    #     mac: {
    #         project_dir: ,
    #         desota_runner: ,
    #         python_path:
    #     },
    #     service_type: model,
    #     timeout: 600,
    #     submodel: true,
    #     parent_model: franciscomvargas/neuralqa/qa
    # },
    spacewalkingninja/automatic/text-to-image: {
        win: {
            version: 0.0.0,
            commit: 27d9865e36f0c8b36200842386ddef87ae859ccf,
            project_dir: Desota\Desota_Models\automatic,
            execs_path: executables\Windows,
            setup: automatic.setup.bat,
            install_requirements: Desota\Desota_Models\automatic\executables\Windows\automatic.requirements.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: automatic.uninstall.bat,
            uninstaller_args: [/Q],
            starter: automatic.start.bat,
            stoper: automatic.stop.bat,
            status: automatic.status.bat,

            desota_runner: runner_text_to_image.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Gypsy Flamenco Spanish Girl fibonacci portrait photography ultrahd,
                type: text,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Desota_Models\automatic\requirements.txt
        },        
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/automatic,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/automatic,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: model,
        timeout: 1280,
        required: false,
        source_code: https://github.com/spacewalkingninja/automatic,
        report_issue: https://github.com/spacewalkingninja/automatic/issues,
        description: https://github.com/spacewalkingninja/automatic/tree/main#readme,
        short_description: SD.Next Stable Difusion AUTOMATIC111 for ALL GPU,
        model_ui: http://127.0.0.1:7860/,
        handshake_req: http://127.0.0.1:7860/token,
        handshake_res: {
            token: null, 
            user: null
        },
        run_constantly: true,
        submodel: false,
        child_models: [
            spacewalkingninja/automatic/controlnet-depth-text-to-image,
        ]
    },
    spacewalkingninja/automatic/controlnet-depth-text-to-image: {
        win: {
            project_dir: Desota\Desota_Models\automatic,
            desota_runner: runner_text_to_image_control_depth.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\automatic\runner_text_to_image_control_depth.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: Desota\Desota_Models\automatic\sample.png,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Desota_Models\automatic\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: model,
        timeout: 1280,
        submodel: true,
        parent_model: spacewalkingninja/automatic/text-to-image
    },
    spacewalkingninja/controlnet: {
        win: {
            version: 0.0.0,
            commit: 638c22d7cd92ba029027ed20ea904194f151b03a,
            project_dir: Desota\Desota_Models\controlnet,
            execs_path: executables\Windows,
            setup: control.setup.bat,
            nssm_requirements: Desota\Desota_Models\controlnet\executables\Windows\transformers.requirements.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: control.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: txt2img-canny.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            cli_cmd: [
                Desota\Desota_Models\automatic\env\python.exe,
                Desota\Desota_Models\controlnet\txt2img-canny.py
            ],
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 1240,
        required: false,
        source_code: https://github.com/spacewalkingninja/controlnet,
        report_issue: https://github.com/spacewalkingninja/controlnet/issues,
        description: https://github.com/spacewalkingninja/controlnet/tree/main#readme,
        short_description: Edit Images with SD and Controlnet!,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        child_models: [
            spacewalkingninja/img2text-clip,
            spacewalkingninja/controlnet-img2img-anime,
            spacewalkingninja/controlnet-img2img-depth,
            spacewalkingninja/controlnet-img2img-inpaint,
            spacewalkingninja/controlnet-img2img-ip2p,
            spacewalkingninja/controlnet-img2img-lineart,
            spacewalkingninja/controlnet-img2img-mlsd,
            spacewalkingninja/controlnet-img2img-normalbae,
            spacewalkingninja/controlnet-img2img-pose,
            spacewalkingninja/controlnet-img2img-scribble,
            spacewalkingninja/controlnet-img2img-segment,
            spacewalkingninja/controlnet-img2img-shuffle,
            spacewalkingninja/controlnet-img2img-softedge,
            spacewalkingninja/controlnet-img2img-tile,
            spacewalkingninja/controlnet-img2img-canny,
            spacewalkingninja/controlnet-txt2img-anime,
            spacewalkingninja/controlnet-txt2img-depth,
            spacewalkingninja/controlnet-txt2img-inpaint,
            spacewalkingninja/controlnet-txt2img-ip2p,
            spacewalkingninja/controlnet-txt2img-lineart,
            spacewalkingninja/controlnet-txt2img-mlsd,
            spacewalkingninja/controlnet-txt2img-normalbae,
            spacewalkingninja/controlnet-txt2img-pose,
            spacewalkingninja/controlnet-txt2img-scribble,
            spacewalkingninja/controlnet-txt2img-segment,
            spacewalkingninja/controlnet-txt2img-shuffle,
            spacewalkingninja/controlnet-txt2img-softedge,
            spacewalkingninja/controlnet-txt2img-tile,
        ]
    },
    spacewalkingninja/img2text-clip: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2txt-clip.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2txt-clip.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-canny: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-canny.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-canny.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-tile: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-tile.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-tile.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-softedge: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-softedge.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-softedge.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-shuffle: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-shuffle.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-shuffle.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-segment: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-segment.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-segment.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-scribble: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-scribble.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-scribble.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-pose: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-pose.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-pose.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-normalbae: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-normalbae.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-normalbae.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-mlsd: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-mlsd.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-mlsd.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-lineart: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-lineart.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-lineart.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-ip2p: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-ip2p.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-ip2p.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-inpaint: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-inpaint.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-inpaint.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-depth: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-depth.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-depth.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-img2img-anime: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: img2img-anime.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\img2img-anime.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-tile: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-tile.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-tile.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-softedge: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-softedge.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-softedge.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-shuffle: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-shuffle.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-shuffle.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-segment: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-segment.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-segment.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-scribble: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-scribble.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-scribble.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-pose: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-pose.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-pose.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-normalbae: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-normalbae.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-normalbae.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-mlsd: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-mlsd.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-mlsd.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-lineart: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-lineart.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-lineart.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-ip2p: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-ip2p.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-ip2p.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-inpaint: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-inpaint.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-inpaint.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-depth: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-depth.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-depth.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/controlnet-txt2img-anime: {
        win: {
            project_dir: Desota\Desota_Models\controlnet,
            desota_runner: txt2img-anime.py,
            python_path: Desota\Desota_Models\automatic\env\python.exe,
            
            runner: Desota\Desota_Models\controlnet\txt2img-anime.py,
            runner_py: Desota\Desota_Models\automatic\env\python.exe,
            test_args: {
                query: Beautiful shrek in the night,
                type: image,
                file: sample.png,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/controlnet
    },
    spacewalkingninja/FreeInit: {
        win: {
            version: 0.0.0,
            commit: e7f3d4fe9767bb924b7f20cba43731ea948ebfb8,
            project_dir: Desota\Desota_Models\FreeInit,
            execs_path: executables\Windows,
            setup: fi.setup.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: fi.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: runner.py,
            python_path: Desota\Desota_Models\FreeInit\env\python.exe,
            cli_cmd: [
                Desota\Desota_Models\FreeInit\env\python.exe,
                Desota\Desota_Models\FreeInit\runner.py
            ],
            test_args: {
                query: Shrek dancing on the beach,
                type: text,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Desota_Models\FreeInit\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/FreeInit,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/FreeInit,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 9000,
        required: false,
        source_code: https://github.com/spacewalkingninja/FreeInit,
        report_issue: https://github.com/spacewalkingninja/FreeInit/issues,
        description: https://github.com/spacewalkingninja/FreeInit/tree/main#readme,
        short_description: Text To Video FreeInit AnimateDiff on SD models,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
    },
    spacewalkingninja/AskAnyK: {
        win: {
            version: 0.0.0,
            commit: 0c71e1f51d5cdfe06f2eb6028e4ccc1fb634fb51,
            project_dir: Desota\Desota_Models\AskAnyK,
            execs_path: executables\Windows,
            setup: askanyk.setup.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: askanyk.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: app_ke_runner.py,
            python_path: Desota\Desota_Models\AskAnyK\env\python.exe,
            cli_cmd: [
                Desota\Desota_Models\AskAnyK\env\python.exe,
                Desota\Desota_Models\AskAnyK\app_ke_runner.py
            ],
            test_args: {
                query: Transcribe,
                type: video,
                file: sample.mp4,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Desota_Models\AskAnyK\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/AskAnyK,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/AskAnyK,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 9000,
        required: false,
        source_code: https://github.com/spacewalkingninja/AskAnyK,
        report_issue: https://github.com/spacewalkingninja/AskAnyK/issues,
        description: https://github.com/spacewalkingninja/AskAnyK/tree/main#readme,
        short_description: Let AI Watch video with Ask Anything Kristian Edit,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
    },
    spacewalkingninja/Shap-E: {
        win: {
            version: 0.0.0,
            commit: 438f287476571ffb97093b0f80fc04a625b72d2c,
            project_dir: Desota\Desota_Models\Shap-E,
            execs_path: executables\Windows,
            setup: shape.setup.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: shape.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: text-to-3d.py,
            python_path: Desota\Desota_Models\Shap-E\env\python.exe,
            cli_cmd: [
                Desota\Desota_Models\Shap-E\env\python.exe,
                Desota\Desota_Models\Shap-E\text-to-3d.py
            ],
            test_args: {
                query: Super mario hat,
                type: text,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Desota_Models\Shap-E\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/Shap-E,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/Shap-E,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 1240,
        required: false,
        source_code: https://github.com/spacewalkingninja/Shap-E,
        report_issue: https://github.com/spacewalkingninja/Shap-E/issues,
        description: https://github.com/spacewalkingninja/Shap-E/tree/main#readme,
        short_description: Edit audio with Shap-E,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        child_models: [
            spacewalkingninja/Shap-E/img-to-3d,
        ]
    },
    spacewalkingninja/Shap-E/img-to-3d: {
        win: {
            project_dir: Desota\Desota_Models\Shap-E,
            desota_runner: img-to-3d.py,
            python_path: Desota\Desota_Models\Shap-E\env\python.exe,
            
            runner: Desota\Desota_Models\Shap-E\img-to-3d.py,
            runner_py: Desota\Desota_Models\Shap-E\env\python.exe,
            test_args: {
                query: Super mario hat,
                type: image,
                file: sample.png,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Desota_Models\Shap-E\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/Shap-E
    },
    spacewalkingninja/wcppw: {
        win: {
            version: 0.0.0,
            commit: cebfec33f688f3c0a2dee82a8bd5a88955fbfa39,
            project_dir: Desota\Desota_Models\wcppw,
            execs_path: executables\Windows,
            setup: wcppw.setup.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: wcppw.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: audio-2-text.py,
            python_path: Desota\Portables\Transformers\env\python.exe,
            cli_cmd: [
                Desota\Portables\Transformers\env\python.exe,
                Desota\Desota_Models\wcppw\main.py
            ],
            test_args: {
                query: Transcribe,
                type: audio,
                file: sample.flac,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/wcppw,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/wcppw,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 1240,
        required: false,
        source_code: https://github.com/spacewalkingninja/wcppw,
        report_issue: https://github.com/spacewalkingninja/wcppw/issues,
        description: https://github.com/spacewalkingninja/wcppw/tree/main#readme,
        short_description: Transcribe audio with whisper on widonws,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        dependencies: [
            spacewalkingninja/transformers
        ],
    },
    spacewalkingninja/ffbox: {
        win: {
            version: 0.0.0,
            commit: 22a001e6697b8ebc7c94beb9592ee75f53c8123f,
            project_dir: Desota\Desota_Models\ffbox,
            execs_path: executables\Windows,
            setup: ffbox.setup.bat,
            nssm_requirements: Desota\Portables\Transformers\executables\Windows\transformers.requirements.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: ffbox.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: cutting.py,
            python_path: Desota\Portables\Transformers\env\python.exe,
            cli_cmd: [
                Desota\Portables\Transformers\env\python.exe,
                Desota\Desota_Models\cutting\main.py
            ],
            test_args: {
                query: start-cut-video@00:00:10;end-cut-video@ 1 minute 25 Seconds,
                type: video,
                file: sample.mp4,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/ffbox,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/ffbox,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 1240,
        required: false,
        source_code: https://github.com/spacewalkingninja/ffbox,
        report_issue: https://github.com/spacewalkingninja/ffbox/issues,
        description: https://github.com/spacewalkingninja/ffbox/tree/main#readme,
        short_description: Video edit with ffmpeg and desota agi,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        dependencies: [
            spacewalkingninja/transformers
        ],
        child_models: [
        ]
    },
    spacewalkingninja/audiocraft/text-to-music: {
        win: {
            version: 0.0.0,
            commit: 28ead8d4f71447405bcad29de6a6a5edd6f2e022,
            project_dir: Desota\Desota_Models\audiocraft,
            execs_path: executables\Windows,
            setup: audiocraft.setup.bat,
            nssm_requirements: Desota\Portables\Transformers\executables\Windows\transformers.requirements.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: audiocraft.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: audiocraft_txt2music.py,
            python_path: Desota\Portables\Transformers\env\python.exe,
            cli_cmd: [
                Desota\Portables\Transformers\env\python.exe,
                Desota\Desota_Models\audiocraft\main.py
            ],
            test_args: {
                query: House Jazz Gypsy Flamenco Spanish One Third Five Quarters,
                type: text,
                raw_dict: null
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/audiocraft,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/audiocraft,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 1240,
        required: false,
        source_code: https://github.com/spacewalkingninja/audiocraft,
        report_issue: https://github.com/spacewalkingninja/audiocraft/issues,
        description: https://github.com/spacewalkingninja/audiocraft/tree/main#readme,
        short_description: Edit audio with audiocraft,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        dependencies: [
            spacewalkingninja/transformers
        ],
        child_models: [
            spacewalkingninja/audiocraft/music-to-music,
        ]
    },
    spacewalkingninja/audiocraft/music-to-music: {
        win: {
            project_dir: Desota\Desota_Models\audiocraft,
            desota_runner: audiocraft_music2music.py,
            python_path: Desota\Portables\Transformers\env\python.exe,
            
            runner: Desota\Desota_Models\audiocraft\audiocraft_music2music.py,
            runner_py: Desota\Portables\Transformers\env\python.exe,
            test_args: {
                query: House Jazz Gypsy Flamenco Spanish One Third Five Quarters,
                type: audio,
                file: Desota\Desota_Models\audiocraft\sample.wav,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },
            pyrequirements: Desota\Portables\Transformers\requirements.txt
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/audiocraft/text-to-music
    },
    franciscomvargas/descraper/url: {
        win: {
            version: 0.0.2,
            commit: 19d4851aeebe376106a8686734952f8a4dfb2420,
            project_dir: Desota\Desota_Models\DeScraper,
            execs_path: executables\Windows,
            setup: descraper.setup.bat,
            setup_args: [/manualstart],
            uninstaller: descraper.uninstall.bat,
            uninstaller_args: [/Q],
            starter: descraper.start.bat,
            stoper: descraper.stop.bat,
            status: descraper.status.bat,
            test_args: {
                query: Scrape,
                type: null,
                file: null,
                raw_dict: {
                    url: https://pt.wikipedia.org/wiki/Os_Simpsons
                }
                # test_timout = OPTIONAL (default = timeout)
            },

            desota_runner: url_runner.py,
            python_path: Desota\Desota_Models\DeScraper\env\python.exe,
            pyrequirements: Desota\Desota_Models\DeScraper\requirements.txt
        },
        lin: {
            version: 0.0.2,
            commit: 19d4851aeebe376106a8686734952f8a4dfb2420,
            project_dir: Desota/Desota_Models/DeScraper,
            execs_path: executables/Linux,
            setup: descraper.setup.bash,
            setup_args: [-m],
            uninstaller: descraper.uninstall.bash,
            uninstaller_args: [-q],
            starter: descraper.start.bash,
            stoper: descraper.stop.bash,
            status: descraper.status.bash,
            test_args: {
                query: Scrape,
                type: null,
                file: null,
                raw_dict: {
                    url: https://pt.wikipedia.org/wiki/Os_Simpsons
                }
                # test_timout = OPTIONAL (default = timeout)
            },
            
            desota_runner: url_runner.py,
            python_path: Desota/Desota_Models/DeScraper/env/bin/python3,
            pyrequirements: Desota/Desota_Models/DeScraper/requirements.txt
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/DeScraper,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path:
        },
        service_type: model,
        timeout: 600,
        required: false,
        source_code: https://github.com/franciscomvargas/descraper,
        report_issue: https://github.com/franciscomvargas/descraper/issues,
        description: https://github.com/franciscomvargas/descraper/tree/main#readme,
        short_description: WebScrape with assistance of AI Models,
        model_ui: http://127.0.0.1:8880/,
        handshake_req: http://127.0.0.1:8880/api/handshake/,
        handshake_res: {
            status: ready
        },
        run_constantly: true,
        submodel: false,
        child_models: [
            franciscomvargas/descraper/html
        ]
    },
    franciscomvargas/descraper/html: {
        win: {
            project_dir: Desota\Desota_Models\DeScraper,
            test_args: {
                query: Scrape,
                type: null,
                file: null,
                raw_dict: {
                    url: https://pt.wikipedia.org/wiki/Os_Simpsons
                }
                # test_timout = OPTIONAL (default = timeout)
            },
            desota_runner: html_runner.py,
            python_path: Desota\Desota_Models\DeScraper\env\python.exe,
            pyrequirements: Desota\Desota_Models\DeScraper\requirements.txt
        },
        lin: {
            project_dir: Desota/Desota_Models/DeScraper,
            test_args: {
                query: Scrape,
                type: null,
                file: null,
                raw_dict: {
                    url: https://pt.wikipedia.org/wiki/Os_Simpsons
                }
                # test_timout = OPTIONAL (default = timeout)
            },
            desota_runner: html_runner.py,
            python_path: Desota/Desota_Models/DeScraper/env/bin/python3,
            pyrequirements: Desota/Desota_Models/DeScraper/requirements.txt
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: model,
        timeout: 600,
        submodel: true,
        parent_model: franciscomvargas/descraper/url
    },
    franciscomvargas/whisper.cpp: {
        win: {
            version: ,
            commit: ,
            project_dir: Desota\Desota_Models\WhisperCpp,
            execs_path: executables\Windows,
            setup: whisper_cpp.setup.bat,
            setup_args: [/manualstart],
            uninstaller: whisper_cpp.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,
            test_args: {
                query: Transcribe,
                type: audio,
                file: Desota\Desota_Models\WhisperCpp\samples\jfk.wav,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },
            desota_runner: runner.py,
            python_path: Desota\Portables\TinyPython\env\python.exe,
            pyrequirements: Desota\Portables\TinyPython\requirements.txt,
            cli_cmd: []
        },
        lin: {
            version: 0.0.0,
            commit: 2890b3527e9c677a74e8203df79a11e311da5849,
            project_dir: Desota/Desota_Models/WhisperCpp,
            execs_path: executables/Linux,
            setup: whisper_cpp.setup.bash,
            setup_args: [-m],
            uninstaller: whisper_cpp.uninstall.bash,
            uninstaller_args: [-q],
            starter: ,
            stoper: ,
            status: ,
            test_args: {
                query: Transcribe,
                type: audio,
                file: Desota/Desota_Models/WhisperCpp/samples/jfk.wav,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },

            desota_runner: runner.py,
            python_path: Desota/Portables/TinyPython/env/bin/python3,
            pyrequirements: Desota\Portables\TinyPython\requirements.txt,
            cli_cmd: [
                Desota/Desota_Models/WhisperCpp/stream, 
                -m, Desota/Desota_Models/WhisperCpp/models/ggml-base.en.bin,
                --step, 30000,
                --length, 30000
            ]
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/WhisperCpp,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: model,
        timeout: 600,
        required: false,
        source_code: https://github.com/franciscomvargas/whisper.cpp,
        report_issue: https://github.com/franciscomvargas/whisper.cpp/issues,
        description: https://github.com/franciscomvargas/whisper.cpp/tree/master#readme,
        short_description: Port of OpenAI's Whisper model in C/C++,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        child_models: null,
        dependencies: [
            desotaai/tinypython
        ]
    },
    # Tools
    franciscomvargas/deurlcruncher: {
        win: {
            version: 0.0.2,
            commit: fb32f53a53bb52bf188ec3258a67217a1243ecd6,
            project_dir: Desota\Desota_Models\DeUrlCruncher,
            execs_path: executables\Windows,
            setup: deurlcruncher.setup.bat,
            setup_args: [/manualstart],
            uninstaller: deurlcruncher.uninstall.bat,
            uninstaller_args: [/Q],
            nssm_requirements: Desota\Desota_Models\DeUrlCruncher\executables\Windows\deurlcruncher.requirements.bat,
            starter: ,
            stoper: ,
            status: ,
            test_args: {
                query: News about,
                type: text,
                file: Artificial General Intelligence,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },

            desota_runner: runner.py,
            python_path: Desota\Desota_Models\DeUrlCruncher\env\python.exe,
            cli_cmd: [
                Desota\Desota_Models\DeUrlCruncher\env\python.exe,
                Desota\Desota_Models\DeUrlCruncher\main.py
            ]
        },
        lin: {
            version: 0.0.2,
            commit: fb32f53a53bb52bf188ec3258a67217a1243ecd6,
            project_dir: Desota/Desota_Models/DeUrlCruncher,
            execs_path: executables/Linux,
            setup: deurlcruncher.setup.bash,
            setup_args: [-m],
            uninstaller: deurlcruncher.uninstall.bash,
            uninstaller_args: [-q],
            starter: ,
            stoper: ,
            status: ,
            test_args: {
                query: News about,
                type: text,
                file: Artificial General Intelligence,
                raw_dict: null,
                # test_timout = OPTIONAL (default = timeout)
            },

            desota_runner: runner.py,
            python_path: Desota/Desota_Models/DeUrlCruncher/env/bin/python3,
            pyrequirements: Desota\Desota_Models\DeUrlCruncher\requirements.txt,
            cli_cmd: [
                Desota/Desota_Models/DeUrlCruncher/env/bin/python3,
                Desota/Desota_Models/DeUrlCruncher/main.py
            ]
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/DeUrlCruncher,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 600,
        required: false,
        source_code: https://github.com/franciscomvargas/DeUrlCruncher,
        report_issue: https://github.com/franciscomvargas/DeUrlCruncher/issues,
        description: https://github.com/franciscomvargas/DeUrlCruncher/tree/main#readme,
        short_description: Get google URL results from string query,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        child_models: null
    },
    spacewalkingninja/DesotaControlVideo/text-and-pose: {
        win: {
            version: 0.0.3,
            commit: ea8d384844d5731c9ca150a0763da99c9b04919f,
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            execs_path: executables\Windows,
            setup: desotacontrolvideo.setup.bat,
            setup_args: [/manualstart, /debug],
            uninstaller: desotacontrolvideo.uninstall.bat,
            uninstaller_args: [/Q],
            starter: ,
            stoper: ,
            status: ,

            desota_runner: runner.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            cli_cmd: [
                Desota\Desota_Models\DesotaControlVideo\env\python.exe,
                Desota\Desota_Models\DesotaControlVideo\main.py
            ]
        },
        lin: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/DesotaControlVideo,
            execs_path: executables/Linux,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        mac: {
            version: ,
            commit: ,
            project_dir: Desota/Desota_Models/DesotaControlVideo,
            execs_path: executables/MacOS,
            setup: ,
            setup_args: ,
            uninstaller: ,
            uninstaller_args: ,
            starter: ,
            stoper: ,
            status: ,

            desota_runner: ,
            python_path: ,
            cli_cmd: 
        },
        service_type: tool,
        timeout: 1240,
        required: false,
        source_code: https://github.com/spacewalkingninja/DesotaControlVideo,
        report_issue: https://github.com/spacewalkingninja/DesotaControlVideo/issues,
        description: https://github.com/spacewalkingninja/DesotaControlVideo/tree/main#readme,
        short_description: Edit videos with StableDiffusion + Controlnet,
        model_cli: cli_cmd,
        run_constantly: false,
        submodel: false,
        child_models: [
              spacewalkingninja/DesotaControlVideo/text-and-softedge,
              spacewalkingninja/DesotaControlVideo/text-and-canny,
              spacewalkingninja/DesotaControlVideo/text-and-geometry,
              spacewalkingninja/DesotaControlVideo/text-and-depth,
              spacewalkingninja/DesotaControlVideo/text-and-shuffle,
              spacewalkingninja/DesotaControlVideo/text-and-lineart,
              spacewalkingninja/DesotaControlVideo/extract-canny,
              spacewalkingninja/DesotaControlVideo/extract-pose,
              spacewalkingninja/DesotaControlVideo/extract-scribble,
              spacewalkingninja/DesotaControlVideo/extract-softedge,
              spacewalkingninja/DesotaControlVideo/extract-depth,
              spacewalkingninja/DesotaControlVideo/extract-face-geometry,
              spacewalkingninja/DesotaControlVideo/extract-normals,
              spacewalkingninja/DesotaControlVideo/extract-geometry,
              spacewalkingninja/DesotaControlVideo/extract-lineart,
              spacewalkingninja/DesotaControlVideo/extract-anime,

          ]
    },
    spacewalkingninja/DesotaControlVideo/text-and-softedge: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_inference_softedge.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            
            runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_softedge.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/text-and-canny: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_inference_canny.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_canny.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/text-and-geometry: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_inference_geometry.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_geometry.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/text-and-depth: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_inference_depth.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_depth.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/text-and-shuffle: {
      win: {
          project_dir: Desota\Desota_Models\DesotaControlVideo,
          desota_runner: runner_inference_shuffle.py,
          python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
          runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_shuffle.py,
          runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
      },
      lin: {
          project_dir: ,
          desota_runner: ,
          python_path:
      },
      mac: {
          project_dir: ,
          desota_runner: ,
          python_path:
      },
      service_type: tool,
      timeout: 1240,
      submodel: true,
      parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/text-and-lineart: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_inference_lineart.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_lineart.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/text-to-anime-style: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_inference_lineart_anime.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_inference_lineart_anime.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-canny: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_canny.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_canny.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-pose: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_pose.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_pose.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-scribble: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_scribble.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_scribble.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-softedge: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_softedge.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_softedge.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-depth: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_depth.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_depth.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-face-geometry: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_face.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_face.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-normals: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_normals.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_normals.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-geometry: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_geometry.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_geometry.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-lineart: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_lineart.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_lineart.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
    spacewalkingninja/DesotaControlVideo/extract-anime: {
        win: {
            project_dir: Desota\Desota_Models\DesotaControlVideo,
            desota_runner: runner_extract_lineart_anime.py,
            python_path: Desota\Desota_Models\DesotaControlVideo\env\python.exe,
            runner: Desota\Desota_Models\DesotaControlVideo\runner_extract_lineart_anime.py,
            runner_py: Desota\Desota_Models\DesotaControlVideo\env\python.exe
        },
        lin: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        mac: {
            project_dir: ,
            desota_runner: ,
            python_path:
        },
        service_type: tool,
        timeout: 1240,
        submodel: true,
        parent_model: spacewalkingninja/DesotaControlVideo/text-and-pose
    },
}

## DeSOTA Manager Tools Params
manager_params: {
    win: {
        version: 0.3.0,
        project_dir: Desota\Desota_Models\DeManagerTools,
        build_url: https://github.com/DeSOTAai/DeManagerTools/releases/download/v0.3.0/v0.3.0-win64.zip,
        release_desc: Alpha Pre-Release > Parent Services Accept Dependencies
    },
    lin: {
        version: 0.2.0,
        project_dir: Desota/Desota_Models/DeManagerTools,
        build_url: https://github.com/DeSOTAai/DeManagerTools/releases/download/v0.2.0/v0.2.0-lin64.zip,
        release_desc: Alpha Release > DeSOTA API Comunication
    },
    mac: {
        version: ,
        project_dir: Desota/Desota_Models/DeManagerTools,
        build_url: ,
        release_desc: 
    },
    source_code: https://github.com/desotaai/demanagertools,
    report_issue: https://github.com/desotaai/demanagertools/issues,
    description: https://github.com/desotaai/demanagertools/tree/main#readme,
    short_description: DeSOTA Manager and Tools for Client Servers,
}
